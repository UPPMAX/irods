/* nedStub.h
   Generated by gSOAP 2.7.9l from nedMS_wsdl.h
   Copyright(C) 2000-2007, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef nedStub_H
#define nedStub_H
#ifndef WITH_NONAMESPACES
#define WITH_NONAMESPACES
#endif
#include "stdsoap2.h"
#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_ns1__ObjInfo
#define SOAP_TYPE_ns1__ObjInfo (6)
/* ns1:ObjInfo */
struct ns1__ObjInfo
{
	struct ns1__ArrayOfCrossID *ArrayOfCrossID;	/* optional element of type ns1:ArrayOfCrossID */
	double dist;	/* required element of type xsd:double */
	int no_USCOREref;	/* required element of type xsd:int */
	int no_USCOREnote;	/* required element of type xsd:int */
	int no_USCOREphotom;	/* required element of type xsd:int */
	char *objtype;	/* optional element of type xsd:string */
	double ra;	/* required element of type xsd:double */
	double dec;	/* required element of type xsd:double */
	double unc_USCOREmaj;	/* required element of type xsd:double */
	double unc_USCOREmin;	/* required element of type xsd:double */
	double unc_USCOREang;	/* required element of type xsd:double */
	char *refcode;	/* optional element of type xsd:string */
	struct ns1__ArrayOfMoreData *ArrayOfMoreData;	/* optional element of type ns1:ArrayOfMoreData */
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfCrossID
#define SOAP_TYPE_ns1__ArrayOfCrossID (7)
/* ns1:ArrayOfCrossID */
struct ns1__ArrayOfCrossID
{
	int __sizeCrossID;	/* sequence of elements <CrossID> */
	struct ns1__CrossID *CrossID;	/* optional element of type ns1:CrossID */
};
#endif

#ifndef SOAP_TYPE_ns1__CrossID
#define SOAP_TYPE_ns1__CrossID (12)
/* ns1:CrossID */
struct ns1__CrossID
{
	char *objname;	/* optional element of type xsd:string */
	char *objtype;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfMoreData
#define SOAP_TYPE_ns1__ArrayOfMoreData (10)
/* ns1:ArrayOfMoreData */
struct ns1__ArrayOfMoreData
{
	int __sizeMoreData;	/* sequence of elements <MoreData> */
	struct ns1__MoreData *MoreData;	/* optional element of type ns1:MoreData */
};
#endif

#ifndef SOAP_TYPE_ns1__MoreData
#define SOAP_TYPE_ns1__MoreData (14)
/* ns1:MoreData */
struct ns1__MoreData
{
	char *data_USCOREtypec;	/* optional element of type xsd:string */
	char *data;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfObjInfo
#define SOAP_TYPE_ns1__ArrayOfObjInfo (16)
/* ns1:ArrayOfObjInfo */
struct ns1__ArrayOfObjInfo
{
	int __sizeObjInfo;	/* sequence of elements <ObjInfo> */
	struct ns1__ObjInfo *ObjInfo;	/* optional element of type ns1:ObjInfo */
};
#endif

#ifndef SOAP_TYPE_ns1__ArrayOfString
#define SOAP_TYPE_ns1__ArrayOfString (18)
/* ns1:ArrayOfString */
struct ns1__ArrayOfString
{
	int __sizestring;	/* sequence of elements <string> */
	char **string;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__ObjByName
#define SOAP_TYPE__ns1__ObjByName (20)
/* ns1:ObjByName */
struct _ns1__ObjByName
{
	char *objname;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns1__ObjByNameResponse
#define SOAP_TYPE__ns1__ObjByNameResponse (21)
/* ns1:ObjByNameResponse */
struct _ns1__ObjByNameResponse
{
	struct ns1__ObjInfo *ObjByNameResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ObjInfo */
};
#endif

#ifndef SOAP_TYPE__ns1__ObjNearName
#define SOAP_TYPE__ns1__ObjNearName (22)
/* ns1:ObjNearName */
struct _ns1__ObjNearName
{
	char *objname;	/* optional element of type xsd:string */
	double radius;	/* required element of type xsd:double */
};
#endif

#ifndef SOAP_TYPE__ns1__ObjNearNameResponse
#define SOAP_TYPE__ns1__ObjNearNameResponse (23)
/* ns1:ObjNearNameResponse */
struct _ns1__ObjNearNameResponse
{
	struct ns1__ArrayOfObjInfo *ObjNearNameResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfObjInfo */
};
#endif

#ifndef SOAP_TYPE__ns1__ObjNearPosn
#define SOAP_TYPE__ns1__ObjNearPosn (25)
/* ns1:ObjNearPosn */
struct _ns1__ObjNearPosn
{
	double ra;	/* required element of type xsd:double */
	double dec;	/* required element of type xsd:double */
	double radius;	/* required element of type xsd:double */
};
#endif

#ifndef SOAP_TYPE__ns1__ObjNearPosnResponse
#define SOAP_TYPE__ns1__ObjNearPosnResponse (26)
/* ns1:ObjNearPosnResponse */
struct _ns1__ObjNearPosnResponse
{
	struct ns1__ArrayOfObjInfo *ObjNearPosnResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfObjInfo */
};
#endif

#ifndef SOAP_TYPE__ns1__Revisions
#define SOAP_TYPE__ns1__Revisions (27)
/* ns1:Revisions */
struct _ns1__Revisions
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE__ns1__RevisionsResponse
#define SOAP_TYPE__ns1__RevisionsResponse (28)
/* ns1:RevisionsResponse */
struct _ns1__RevisionsResponse
{
	struct ns1__ArrayOfString *RevisionsResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ns1:ArrayOfString */
};
#endif

#ifndef SOAP_TYPE___ns2__ObjByName
#define SOAP_TYPE___ns2__ObjByName (33)
/* Operation wrapper: */
struct __ns2__ObjByName
{
	struct _ns1__ObjByName *ns1__ObjByName;	/* optional element of type ns1:ObjByName */
};
#endif

#ifndef SOAP_TYPE___ns2__ObjNearName
#define SOAP_TYPE___ns2__ObjNearName (37)
/* Operation wrapper: */
struct __ns2__ObjNearName
{
	struct _ns1__ObjNearName *ns1__ObjNearName;	/* optional element of type ns1:ObjNearName */
};
#endif

#ifndef SOAP_TYPE___ns2__ObjNearPosn
#define SOAP_TYPE___ns2__ObjNearPosn (41)
/* Operation wrapper: */
struct __ns2__ObjNearPosn
{
	struct _ns1__ObjNearPosn *ns1__ObjNearPosn;	/* optional element of type ns1:ObjNearPosn */
};
#endif

#ifndef SOAP_TYPE___ns2__Revisions
#define SOAP_TYPE___ns2__Revisions (45)
/* Operation wrapper: */
struct __ns2__Revisions
{
	struct _ns1__Revisions *ns1__Revisions;	/* optional element of type ns1:Revisions */
};
#endif

#ifndef SOAP_TYPE___ns3__ObjByName
#define SOAP_TYPE___ns3__ObjByName (47)
/* Operation wrapper: */
struct __ns3__ObjByName
{
	struct _ns1__ObjByName *ns1__ObjByName;	/* optional element of type ns1:ObjByName */
};
#endif

#ifndef SOAP_TYPE___ns3__ObjNearName
#define SOAP_TYPE___ns3__ObjNearName (49)
/* Operation wrapper: */
struct __ns3__ObjNearName
{
	struct _ns1__ObjNearName *ns1__ObjNearName;	/* optional element of type ns1:ObjNearName */
};
#endif

#ifndef SOAP_TYPE___ns3__ObjNearPosn
#define SOAP_TYPE___ns3__ObjNearPosn (51)
/* Operation wrapper: */
struct __ns3__ObjNearPosn
{
	struct _ns1__ObjNearPosn *ns1__ObjNearPosn;	/* optional element of type ns1:ObjNearPosn */
};
#endif

#ifndef SOAP_TYPE___ns3__Revisions
#define SOAP_TYPE___ns3__Revisions (53)
/* Operation wrapper: */
struct __ns3__Revisions
{
	struct _ns1__Revisions *ns1__Revisions;	/* optional element of type ns1:Revisions */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (54)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (55)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (57)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (60)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (61)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (4)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif


/******************************************************************************\
 *                                                                            *
 * Typedef Synonyms                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Stubs                                                                      *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ObjByName(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__ObjByName *ns1__ObjByName, struct _ns1__ObjByNameResponse *ns1__ObjByNameResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ObjNearName(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__ObjNearName *ns1__ObjNearName, struct _ns1__ObjNearNameResponse *ns1__ObjNearNameResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__ObjNearPosn(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__ObjNearPosn *ns1__ObjNearPosn, struct _ns1__ObjNearPosnResponse *ns1__ObjNearPosnResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns2__Revisions(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__Revisions *ns1__Revisions, struct _ns1__RevisionsResponse *ns1__RevisionsResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__ObjByName(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__ObjByName *ns1__ObjByName, struct _ns1__ObjByNameResponse *ns1__ObjByNameResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__ObjNearName(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__ObjNearName *ns1__ObjNearName, struct _ns1__ObjNearNameResponse *ns1__ObjNearNameResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__ObjNearPosn(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__ObjNearPosn *ns1__ObjNearPosn, struct _ns1__ObjNearPosnResponse *ns1__ObjNearPosnResponse);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns3__Revisions(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__Revisions *ns1__Revisions, struct _ns1__RevisionsResponse *ns1__RevisionsResponse);

#ifdef __cplusplus
}
#endif

#endif

/* End of nedStub.h */
