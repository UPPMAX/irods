/* currencyConvertorStub.h
   Generated by gSOAP 2.7.9l from currencyConvertorMS_wsdl.h
   Copyright(C) 2000-2007, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef currencyConvertorStub_H
#define currencyConvertorStub_H
#ifndef WITH_NONAMESPACES
#define WITH_NONAMESPACES
#endif
#include "stdsoap2.h"
#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_ns1__Currency
#define SOAP_TYPE_ns1__Currency (6)
/* ns1:Currency */
enum ns1__Currency {ns1__Currency__AFA = 0, ns1__Currency__ALL = 1, ns1__Currency__DZD = 2, ns1__Currency__ARS = 3, ns1__Currency__AWG = 4, ns1__Currency__AUD = 5, ns1__Currency__BSD = 6, ns1__Currency__BHD = 7, ns1__Currency__BDT = 8, ns1__Currency__BBD = 9, ns1__Currency__BZD = 10, ns1__Currency__BMD = 11, ns1__Currency__BTN = 12, ns1__Currency__BOB = 13, ns1__Currency__BWP = 14, ns1__Currency__BRL = 15, ns1__Currency__GBP = 16, ns1__Currency__BND = 17, ns1__Currency__BIF = 18, ns1__Currency__XOF = 19, ns1__Currency__XAF = 20, ns1__Currency__KHR = 21, ns1__Currency__CAD = 22, ns1__Currency__CVE = 23, ns1__Currency__KYD = 24, ns1__Currency__CLP = 25, ns1__Currency__CNY = 26, ns1__Currency__COP = 27, ns1__Currency__KMF = 28, ns1__Currency__CRC = 29, ns1__Currency__HRK = 30, ns1__Currency__CUP = 31, ns1__Currency__CYP = 32, ns1__Currency__CZK = 33, ns1__Currency__DKK = 34, ns1__Currency__DJF = 35, ns1__Currency__DOP = 36, ns1__Currency__XCD = 37, ns1__Currency__EGP = 38, ns1__Currency__SVC = 39, ns1__Currency__EEK = 40, ns1__Currency__ETB = 41, ns1__Currency__EUR = 42, ns1__Currency__FKP = 43, ns1__Currency__GMD = 44, ns1__Currency__GHC = 45, ns1__Currency__GIP = 46, ns1__Currency__XAU = 47, ns1__Currency__GTQ = 48, ns1__Currency__GNF = 49, ns1__Currency__GYD = 50, ns1__Currency__HTG = 51, ns1__Currency__HNL = 52, ns1__Currency__HKD = 53, ns1__Currency__HUF = 54, ns1__Currency__ISK = 55, ns1__Currency__INR = 56, ns1__Currency__IDR = 57, ns1__Currency__IQD = 58, ns1__Currency__ILS = 59, ns1__Currency__JMD = 60, ns1__Currency__JPY = 61, ns1__Currency__JOD = 62, ns1__Currency__KZT = 63, ns1__Currency__KES = 64, ns1__Currency__KRW = 65, ns1__Currency__KWD = 66, ns1__Currency__LAK = 67, ns1__Currency__LVL = 68, ns1__Currency__LBP = 69, ns1__Currency__LSL = 70, ns1__Currency__LRD = 71, ns1__Currency__LYD = 72, ns1__Currency__LTL = 73, ns1__Currency__MOP = 74, ns1__Currency__MKD = 75, ns1__Currency__MGF = 76, ns1__Currency__MWK = 77, ns1__Currency__MYR = 78, ns1__Currency__MVR = 79, ns1__Currency__MTL = 80, ns1__Currency__MRO = 81, ns1__Currency__MUR = 82, ns1__Currency__MXN = 83, ns1__Currency__MDL = 84, ns1__Currency__MNT = 85, ns1__Currency__MAD = 86, ns1__Currency__MZM = 87, ns1__Currency__MMK = 88, ns1__Currency__NAD = 89, ns1__Currency__NPR = 90, ns1__Currency__ANG = 91, ns1__Currency__NZD = 92, ns1__Currency__NIO = 93, ns1__Currency__NGN = 94, ns1__Currency__KPW = 95, ns1__Currency__NOK = 96, ns1__Currency__OMR = 97, ns1__Currency__XPF = 98, ns1__Currency__PKR = 99, ns1__Currency__XPD = 100, ns1__Currency__PAB = 101, ns1__Currency__PGK = 102, ns1__Currency__PYG = 103, ns1__Currency__PEN = 104, ns1__Currency__PHP = 105, ns1__Currency__XPT = 106, ns1__Currency__PLN = 107, ns1__Currency__QAR = 108, ns1__Currency__ROL = 109, ns1__Currency__RUB = 110, ns1__Currency__WST = 111, ns1__Currency__STD = 112, ns1__Currency__SAR = 113, ns1__Currency__SCR = 114, ns1__Currency__SLL = 115, ns1__Currency__XAG = 116, ns1__Currency__SGD = 117, ns1__Currency__SKK = 118, ns1__Currency__SIT = 119, ns1__Currency__SBD = 120, ns1__Currency__SOS = 121, ns1__Currency__ZAR = 122, ns1__Currency__LKR = 123, ns1__Currency__SHP = 124, ns1__Currency__SDD = 125, ns1__Currency__SRG = 126, ns1__Currency__SZL = 127, ns1__Currency__SEK = 128, ns1__Currency__CHF = 129, ns1__Currency__SYP = 130, ns1__Currency__TWD = 131, ns1__Currency__TZS = 132, ns1__Currency__THB = 133, ns1__Currency__TOP = 134, ns1__Currency__TTD = 135, ns1__Currency__TND = 136, ns1__Currency__TRL = 137, ns1__Currency__USD = 138, ns1__Currency__AED = 139, ns1__Currency__UGX = 140, ns1__Currency__UAH = 141, ns1__Currency__UYU = 142, ns1__Currency__VUV = 143, ns1__Currency__VEB = 144, ns1__Currency__VND = 145, ns1__Currency__YER = 146, ns1__Currency__YUM = 147, ns1__Currency__ZMK = 148, ns1__Currency__ZWD = 149, ns1__Currency__TRY = 150};
#endif

/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE__ns1__ConversionRate
#define SOAP_TYPE__ns1__ConversionRate (7)
/* ns1:ConversionRate */
struct _ns1__ConversionRate
{
	enum ns1__Currency FromCurrency;	/* required element of type ns1:Currency */
	enum ns1__Currency ToCurrency;	/* required element of type ns1:Currency */
};
#endif

#ifndef SOAP_TYPE__ns1__ConversionRateResponse
#define SOAP_TYPE__ns1__ConversionRateResponse (8)
/* ns1:ConversionRateResponse */
struct _ns1__ConversionRateResponse
{
	double ConversionRateResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:double */
};
#endif

#ifndef SOAP_TYPE___ns1__ConversionRate
#define SOAP_TYPE___ns1__ConversionRate (13)
/* Operation wrapper: */
struct __ns1__ConversionRate
{
	struct _ns1__ConversionRate *ns1__ConversionRate;	/* optional element of type ns1:ConversionRate */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (14)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (15)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (17)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (20)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (21)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (4)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif


/******************************************************************************\
 *                                                                            *
 * Typedef Synonyms                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Stubs                                                                      *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__ConversionRate(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns1__ConversionRate *ns1__ConversionRate, struct _ns1__ConversionRateResponse *ns1__ConversionRateResponse);

#ifdef __cplusplus
}
#endif

#endif

/* End of currencyConvertorStub.h */
