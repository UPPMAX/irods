/* ip2location_wsdl.h
   Generated by wsdl2h 1.2.9l from ip2location.wsdl and typemap.dat
   2007-10-10 19:47:28 GMT
   Copyright (C) 2001-2007 Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/* NOTE:

 - Compile this file with soapcpp2 to complete the code generation process.
 - Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control schema namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) to browse this file.
 - Use wsdl2h option -l to view the software license terms.

   DO NOT include this file directly into your project.
   Include only the soapcpp2-generated headers and source code files.
*/

//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * http://ws.fraudlabs.com/                                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://ws.fraudlabs.com/"

*/

//gsoap ns1   schema namespace:	http://ws.fraudlabs.com/
//gsoap ns1   schema elementForm:	qualified
//gsoap ns1   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Schema Types                                                               *
 *                                                                            *
\******************************************************************************/



/// "http://ws.fraudlabs.com/":IP2LOCATION is a complexType.
struct ns1__IP2LOCATION
{
/// Element COUNTRYCODE of type xs:string.
    char*                                COUNTRYCODE                    0;	///< Optional element.
/// Element COUNTRYNAME of type xs:string.
    char*                                COUNTRYNAME                    0;	///< Optional element.
/// Element REGION of type xs:string.
    char*                                REGION                         0;	///< Optional element.
/// Element CITY of type xs:string.
    char*                                CITY                           0;	///< Optional element.
/// Element LATITUDE of type xs:float.
    float                                LATITUDE                       1;	///< Required element.
/// Element LONGITUDE of type xs:float.
    float                                LONGITUDE                      1;	///< Required element.
/// Element ZIPCODE of type xs:string.
    char*                                ZIPCODE                        0;	///< Optional element.
/// Element ISPNAME of type xs:string.
    char*                                ISPNAME                        0;	///< Optional element.
/// Element DOMAINNAME of type xs:string.
    char*                                DOMAINNAME                     0;	///< Optional element.
/// Element CREDITSAVAILABLE of type xs:string.
    char*                                CREDITSAVAILABLE               0;	///< Optional element.
/// Element MESSAGE of type xs:string.
    char*                                MESSAGE                        0;	///< Optional element.
};


/// Element "http://ws.fraudlabs.com/":IP2Location of complexType.

/// "http://ws.fraudlabs.com/":IP2Location is a complexType.
struct _ns1__IP2Location
{
/// Element IP of type xs:string.
    char*                                IP                             0;	///< Optional element.
/// Element LICENSE of type xs:string.
    char*                                LICENSE                        0;	///< Optional element.
};


/// Element "http://ws.fraudlabs.com/":IP2LocationResponse of complexType.

/// "http://ws.fraudlabs.com/":IP2LocationResponse is a complexType.
struct _ns1__IP2LocationResponse
{
/// Element IP2LocationResult of type "http://ws.fraudlabs.com/":IP2LOCATION.
    struct ns1__IP2LOCATION*             IP2LocationResult              0;	///< Optional element.
};

/// Element "http://ws.fraudlabs.com/":IP2LOCATION of type "http://ws.fraudlabs.com/":IP2LOCATION.
/// Note: use wsdl2h option -g to generate this global element declaration.

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	Ip2LocationWebServiceSoap 
//gsoap ns1  service type:	Ip2LocationWebServiceSoap 
//gsoap ns1  service port:	http://ws.fraudlabs.com/ip2locationwebservice.asmx 
//gsoap ns1  service namespace:	http://ws.fraudlabs.com/ 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Bindings
  - @ref Ip2LocationWebServiceSoap

*/

/**

@page Ip2LocationWebServiceSoap Binding "Ip2LocationWebServiceSoap"

@section Ip2LocationWebServiceSoap_operations Operations of Binding  "Ip2LocationWebServiceSoap"
  - @ref __ns1__IP2Location

@section Ip2LocationWebServiceSoap_ports Endpoints of Binding  "Ip2LocationWebServiceSoap"
  - http://ws.fraudlabs.com/ip2locationwebservice.asmx

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * Ip2LocationWebServiceSoap                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __ns1__IP2Location                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__IP2Location" of service binding "Ip2LocationWebServiceSoap"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://ws.fraudlabs.com/IP2Location"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__IP2Location(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns1__IP2Location*           ns1__IP2Location,
    // response parameters:
    struct _ns1__IP2LocationResponse*   ns1__IP2LocationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__IP2Location(
    struct soap *soap,
    // request parameters:
    struct _ns1__IP2Location*           ns1__IP2Location,
    // response parameters:
    struct _ns1__IP2LocationResponse*   ns1__IP2LocationResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	IP2Location document
//gsoap ns1  service method-encoding:	IP2Location literal
//gsoap ns1  service method-action:	IP2Location http://ws.fraudlabs.com/IP2Location
int __ns1__IP2Location(
    struct _ns1__IP2Location*           ns1__IP2Location,	///< Request parameter
    struct _ns1__IP2LocationResponse*   ns1__IP2LocationResponse	///< Response parameter
);

/* End of ip2location_wsdl.h */
