/*** Copyright (c), The Regents of the University of California            ***
 *** For more information please refer to files in the RENAMERIGHT directory ***/
/* dataObjRename.h - This dataObj may be generated by a program or script
 */

#ifndef OBJ_STAT_H
#define OBJ_STAT_H

/* This is a Object File I/O API call */

#include "rods.h"
#include "procApiRequest.h"
#include "apiNumber.h"
#include "dataObjCopy.h"
#include "dataObjCopy.h"

#ifdef  __cplusplus
extern "C" {
#endif

/* rodsObjStat_t - this is similar to rodsStat_t but has minimum set of
 * parameter that are more irods specific */

typedef struct rodsObjStat {
    rodsLong_t          objSize;        /* file size */
    objType_t           objType;        /* DATA_OBJ_T or COLL_OBJ_T */
    int                 numCopies;
    char                dataId[NAME_LEN];
    char                chksum[NAME_LEN];
    char                ownerName[NAME_LEN];
    char                ownerZone[NAME_LEN];
    char                createTime[TIME_LEN];
    char                modifyTime[TIME_LEN];
    specColl_t          *specColl;
} rodsObjStat_t;

#if defined(RODS_SERVER)
#define RS_OBJ_STAT rsObjStat

/* prototype for the server handler */
int
rsObjStat (rsComm_t *rsComm, dataObjInp_t *dataObjInp, 
rodsObjStat_t **rodsObjStatOut);
int
__rsObjStat (rsComm_t *rsComm, dataObjInp_t *dataObjInp, int interFlag,
rodsObjStat_t **rodsObjStatOut);
int
_rsObjStat (rsComm_t *rsComm, dataObjInp_t *dataObjInp, 
rodsObjStat_t **rodsObjStatOut);
int
querySpecColl (rsComm_t *rsComm, char *objPath, genQueryOut_t **genQueryOut);
int
queueSpecCollCache (genQueryOut_t *genQueryOut, char *objPath);
int
queueSpecCollCacheWithObjStat (rodsObjStat_t *rodsObjStatOut);
specCollCache_t *
matchSpecCollCache (char *objPath);
int
querySubInSpecColl (rsComm_t *rsComm, char *objPath,
int inCachOnly, rodsObjStat_t **rodsObjStatOut);
int
specCollSubStat (rsComm_t *rsComm, specColl_t *specColl,
char *subPath, dataObjInfo_t **dataObjInfo);
int
getSpecCollCache (rsComm_t *rsComm, char *objPath, int inCachOnly,
specCollCache_t **specCollCache);
int
collStat (rsComm_t *rsComm, dataObjInp_t *dataObjInp,
rodsObjStat_t **rodsObjStatOut);
int
dataObjStat (rsComm_t *rsComm, dataObjInp_t *dataObjInp,
rodsObjStat_t **rodsObjStatOut);
#else
#define RS_OBJ_STAT NULL
#endif

/* prototype for the client call */
int
rcObjStat (rcComm_t *conn, dataObjInp_t *dataObjInp, 
rodsObjStat_t **rodsObjStatOut);

#ifdef  __cplusplus
}
#endif

#endif	/* OBJ_STAT_H */
