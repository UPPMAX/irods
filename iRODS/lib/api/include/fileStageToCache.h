/*** Copyright (c), The Regents of the University of California            ***
 *** For more information please refer to files in the COPYRIGHT directory ***/
/* fileStageToCache.h - This file may be generated by a program or script
 */

#ifndef FILE_STAGE_TO_CACHE_H
#define FILE_STAGE_TO_CACHE_H

/* This is a Object File I/O call */

#include "rods.h"
#include "rcMisc.h"
#include "procApiRequest.h"
#include "apiNumber.h"
#include "initServer.h"

#include "fileDriver.h"

typedef struct {
    fileDriverType_t fileType;
    fileDriverType_t cacheFileType;
    int mode;
    int flags;
    rodsLong_t dataSize;
    rodsHostAddr_t addr;
    char filename[MAX_NAME_LEN];
    char cacheFilename[MAX_NAME_LEN];
    keyValPair_t condInput;
} fileStageSyncInp_t;
    
#define fileStageSyncInp_PI "int fileType; int cacheFileType; int mode; int flags; double dataSize; struct RHostAddr_PI; str filename[MAX_NAME_LEN]; str cacheFilename[MAX_NAME_LEN]; struct KeyValPair_PI;"

#if defined(RODS_SERVER)
#define RS_FILE_STAGE_TO_CACHE rsFileStageToCache
/* prototype for the server handler */
int
rsFileStageToCache (rsComm_t *rsComm, fileStageSyncInp_t *fileStageToCacheInp);
int
rsFileStageToCacheByHost (rsComm_t *rsComm, fileStageSyncInp_t *fileStageToCacheInp,
rodsServerHost_t *rodsServerHost);
int
_rsFileStageToCache (rsComm_t *rsComm, fileStageSyncInp_t *fileStageToCacheInp);
int
remoteFileStageToCache (rsComm_t *rsComm, fileStageSyncInp_t *fileStageToCacheInp,
rodsServerHost_t *rodsServerHost);
#else
#define RS_FILE_STAGE_TO_CACHE NULL
#endif

/* prototype for the client call */
int
rcFileStageToCache (rcComm_t *conn, fileStageSyncInp_t *fileStageToCacheInp);

#endif	/* FILE_STAGE_TO_CACHE_H */
