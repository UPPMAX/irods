/*** Copyright (c), The Regents of the University of California            ***
 *** For more information please refer to files in the COPYRIGHT directory ***/
/* fileRename.h - This file may be generated by a program or script
 */

#ifndef FILE_RENAME_H
#define FILE_RENAME_H

/* This is a Object File I/O type API call */

#include "rods.h"
#include "rcMisc.h"
#include "procApiRequest.h"
#include "apiNumber.h"
#include "initServer.h"

#include "fileDriver.h"

typedef struct {
    fileDriverType_t fileType;
    rodsHostAddr_t addr;
    char oldFileName[MAX_NAME_LEN];
    char newFileName[MAX_NAME_LEN];
} fileRenameInp_t;
    
#define fileRenameInp_PI "int fileType; struct RHostAddr_PI; str oldFileName[MAX_NAME_LEN]; str newFileName[MAX_NAME_LEN];"

#if defined(RODS_SERVER)
#define RS_FILE_RENAME rsFileRename
/* prototype for the server handler */
int
rsFileRename (rsComm_t *rsComm, fileRenameInp_t *fileRenameInp);
int
_rsFileRename (rsComm_t *rsComm, fileRenameInp_t *fileRenameInp,
rodsServerHost_t *rodsServerHost);
int
remoteFileRename (rsComm_t *rsComm, fileRenameInp_t *fileRenameInp,
rodsServerHost_t *rodsServerHost);
#else
#define RS_FILE_RENAME NULL
#endif

/* prototype for the client call */
int
rcFileRename (rcComm_t *conn, fileRenameInp_t *fileRenameInp);

#endif	/* FILE_RENAME_H */
