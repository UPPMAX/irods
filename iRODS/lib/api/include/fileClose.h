/**
 * @file  fileClose.h
 *
 */

/*** Copyright (c), The Regents of the University of California            ***
 *** For more information please refer to files in the COPYRIGHT directory ***/
/* fileClose.h - This file may be generated by a program or script
 */

#ifndef FILE_CLOSE_H
#define FILE_CLOSE_H

/* This is a low level file type API call */

#include "rods.h"
#include "rcMisc.h"
#include "procApiRequest.h"
#include "apiNumber.h"
#include "initServer.h"

#include "fileDriver.h"

/**
 * \var fileCloseInp_t
 * \brief Input struct for closing a low level iRODS descriptor index
 * \since 1.0
 *
 * \remark none
 *
 * \note
 * Elements of fileCloseInp_t:
 * \li int fileInx - The descriptor index to close
 * \sa none
 * \bug  no known bugs
 */

typedef struct FileCloseInp {
    int fileInx;
} fileCloseInp_t;
    
#define fileCloseInp_PI "int fileInx;"

#if defined(RODS_SERVER)
#define RS_FILE_CLOSE rsFileClose
/* prototype for the server handler */
int
rsFileClose (rsComm_t *rsComm, fileCloseInp_t *fileCloseInp);
int
_rsFileClose (rsComm_t *rsComm, fileCloseInp_t *fileCloseInp);
int
remoteFileClose (rsComm_t *rsComm, fileCloseInp_t *fileCloseInp,
rodsServerHost_t *rodsServerHost);
#else
#define RS_FILE_CLOSE NULL
#endif

/* prototype for the client call */
int
rcFileClose (rcComm_t *conn, fileCloseInp_t *fileCloseInp);

#endif	/* FILE_CLOSE_H */
