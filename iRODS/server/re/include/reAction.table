
typedef struct {
  char action[MAX_ACTION_SIZE];
  int numberOfStringArgs;
  funcPtr callAction;
} microsdef_t;


int print_hello(ruleExecInfo_t *c);
int whileExec(msParam_t* condition, msParam_t* whileBody,
	      msParam_t* recoverWhileBody, ruleExecInfo_t *rei);
int forExec(msParam_t* initial, msParam_t* condition, msParam_t* step, 
	    msParam_t* forBody, msParam_t* recoverForBody, ruleExecInfo_t *rei);
int delayExec(msParam_t* condition, msParam_t* workflow, 
	      msParam_t* recoverWorkFlow, ruleExecInfo_t *rei);
int remoteExec(msParam_t* hostName, msParam_t* condition, msParam_t* workflow, 
	      msParam_t* recoverWorkFlow, ruleExecInfo_t *rei);
int forEachExec(msParam_t* list, msParam_t* setOfWFS, msParam_t* recoverSetOfWFS,
	      ruleExecInfo_t *rei);
int msiSleep(msParam_t* sec, msParam_t* microsec, ruleExecInfo_t *rei);
int writeString(msParam_t* where, msParam_t* inString, ruleExecInfo_t *rei);
int writeLine(msParam_t* where, msParam_t* inString, ruleExecInfo_t *rei);
int writeBytesBuf(msParam_t* where, msParam_t* inBuf, ruleExecInfo_t *rei);
int writePosInt(msParam_t* where, msParam_t* inInt, ruleExecInfo_t *rei);
int writeKeyValPairs(msParam_t *where, msParam_t *inKVPair, msParam_t *separator, ruleExecInfo_t *rei);
int msiGetDiffTime(msParam_t* inpParam1,  msParam_t* inpParam2, msParam_t* inpParam3, msParam_t* outParam, ruleExecInfo_t *rei);
int msiGetSystemTime(msParam_t* outParam,  msParam_t* inpParam, ruleExecInfo_t *rei);
int msiHumanToSystemTime(msParam_t* inpParam, msParam_t* outParam, ruleExecInfo_t *rei);
int msiStrToBytesBuf(msParam_t* str_msp, msParam_t* buf_msp, ruleExecInfo_t *rei);
int msiApplyDCMetadataTemplate(msParam_t* inpParam, msParam_t* outParam, ruleExecInfo_t *rei);

int  msiSetResource(msParam_t* xrescName, ruleExecInfo_t *rei);
int sendStdoutAsEmail(msParam_t* xtoAddr, msParam_t* xsubjectLine, ruleExecInfo_t *rei);
int msiPrintKeyValPair(msParam_t* where, msParam_t* inKVPair,  ruleExecInfo_t *rei);
int msiGetValByKey(msParam_t* inKVPair,  msParam_t* inKey, msParam_t* outVal,  ruleExecInfo_t *rei);
int assign(msParam_t* var, msParam_t* value, ruleExecInfo_t *rei);
int ifExec(msParam_t* condition, msParam_t* thenC, msParam_t* recoverThen, 
	   msParam_t* elseC, msParam_t* recoverElse, ruleExecInfo_t *rei);
int breakExec(ruleExecInfo_t *rei);
int msiApplyAllRules(msParam_t *actionParam, msParam_t* reiSaveFlagParam, 
	msParam_t* allRuleExecFlagParam, ruleExecInfo_t *rei);
int msiExecStrCondQuery(msParam_t* queryParam, msParam_t* genQueryOutParam, ruleExecInfo_t *rei);
int msiExecGenQuery(msParam_t* genQueryInParam, msParam_t* genQueryOutParam, ruleExecInfo_t *rei);
int msiMakeQuery(msParam_t* selectListParam, msParam_t* conditionsParam,
		 msParam_t* queryOutParam, ruleExecInfo_t *rei);
int msiMakeGenQuery(msParam_t* selectListStr, msParam_t* condStr, msParam_t* genQueryInpParam, ruleExecInfo_t *rei);
int msiGetMoreRows(msParam_t *genQueryInp_msp, msParam_t *genQueryOut_msp, msParam_t *continueInx, ruleExecInfo_t *rei);

int msiVacuum(ruleExecInfo_t *rei);
int msiGoodFailure(ruleExecInfo_t *rei);
int msiRegisterData(ruleExecInfo_t *rei);
int msiCheckPermission(msParam_t *perm, ruleExecInfo_t *rei);
int msiCheckOwner(ruleExecInfo_t *rei);
int msiCreateUser(ruleExecInfo_t *rei);
int msiCreateCollByAdmin(msParam_t *parColl, msParam_t *childName, ruleExecInfo_t *rei);
int msiCommit(ruleExecInfo_t *rei);
int msiDeleteCollByAdmin(msParam_t *parColl, msParam_t *childName, ruleExecInfo_t *rei);
int msiDeleteUser(ruleExecInfo_t *rei);
int msiAddUserToGroup(msParam_t *msParam, ruleExecInfo_t *rei);
int msiSendMail(msParam_t *toAddr, msParam_t *subjectLine, msParam_t *body, ruleExecInfo_t *rei);
int msiAdmChangeCoreIRB(msParam_t *newF, ruleExecInfo_t *rei);
int msiAdmShowIRB(msParam_t *bufP, ruleExecInfo_t *rei);
int msiAdmShowDVM(msParam_t *bufP, ruleExecInfo_t *rei);
int msiAdmShowFNM(msParam_t *bufP, ruleExecInfo_t *rei);
int msiAdmAppendToTopOfCoreIRB(msParam_t *bufP, ruleExecInfo_t *rei);
int msiAdmClearAppRuleStruct(ruleExecInfo_t *rei);
int msiAdmAddAppRuleStruct(msParam_t *irbFilesParam, msParam_t *dvmFilesParam, 
			msParam_t *fnmFilesParam,  ruleExecInfo_t *rei);
int msiGetObjType(msParam_t *objNameP, msParam_t *objTypeP,
	      ruleExecInfo_t *rei);
int msiAssociateKeyValuePairsToObj(msParam_t *mDP, msParam_t* objP,  msParam_t* typP,
				   ruleExecInfo_t *rei);
int msiExtractTemplateMDFromBuf(msParam_t* sOP, msParam_t* tSP, 
			   msParam_t *mDP, ruleExecInfo_t *rei);
int msiReadMDTemplateIntoTagStruct(msParam_t* sOP, msParam_t* tSP, ruleExecInfo_t *rei);
int msiFreeBuffer(msParam_t* memP, ruleExecInfo_t *rei);
int msiGetIcatTime(msParam_t* timeOutParam,  msParam_t* typeInParam, ruleExecInfo_t *rei);

int msiGetTaggedValueFromString(msParam_t *inTagParag, msParam_t *inStrParam,
				msParam_t *outValueParam, ruleExecInfo_t *rei);
int recover_print_hello(ruleExecInfo_t *c);

int recover_msiCreateUser(ruleExecInfo_t *rei);
int recover_msiCreateCollByAdmin(msParam_t *parColl, msParam_t *childName, ruleExecInfo_t *rei);

int msiXmsgServerConnect(msParam_t* outConnParam, ruleExecInfo_t *rei);
int msiXmsgCreateStream(msParam_t* inConnParam, 
			msParam_t* inGgetXmsgTicketInpParam, 
			msParam_t* outXmsgTicketInfoParam, 
			ruleExecInfo_t *rei);
int msiCreateXmsgInp(msParam_t* inMsgNumber,
		  msParam_t* inMsgType,
		  msParam_t* inNumberOfReceivers,
		  msParam_t* inMsg,
		  msParam_t* inNumberOfDeliverySites,
		  msParam_t* inDeliveryAddressList,
		  msParam_t* inDeliveryPortList,
		  msParam_t* inMiscInfo,
		  msParam_t* inXmsgTicketInfoParam,
		  msParam_t* outSendXmsgInfoParam,
		ruleExecInfo_t *rei);
int msiSendXmsg(msParam_t* inConnParam, 
		msParam_t* inSendXmsgInpParam,
		ruleExecInfo_t *rei);
int msiRcvXmsg(msParam_t* inConnParam, 
	       msParam_t* inTicketNumber,
	       msParam_t* inMsgNumber,
	       msParam_t* outMsgType,
	       msParam_t* outMsg,
	       msParam_t* outSendUser,
	       ruleExecInfo_t *rei);
int msiXmsgServerDisConnect(msParam_t* inConnParam, ruleExecInfo_t *rei);
int msiString2KeyValPair(msParam_t *inBufferP, msParam_t* outKeyValPairP, ruleExecInfo_t *rei);
int msiStrArray2String(msParam_t* inSAParam, msParam_t* outStr, ruleExecInfo_t *rei);

int msiRdaToStdout(msParam_t *inpRdaName, msParam_t *inpSQL, 
	 msParam_t *inpParam1, msParam_t *inpParam2, 
	 msParam_t *inpParam3, msParam_t *inpParam4, 
	 ruleExecInfo_t *rei);
int msiRdaToDataObj(msParam_t *inpRdaName, msParam_t *inpSQL, 
	 msParam_t *inpParam1, msParam_t *inpParam2, 
	 msParam_t *inpParam3, msParam_t *inpParam4, 
	 msParam_t *inOutFd, ruleExecInfo_t *rei);
int msiRdaNoResults(msParam_t *inpRdaName, msParam_t *inpSQL, 
	 msParam_t *inpParam1, msParam_t *inpParam2, 
	 msParam_t *inpParam3, msParam_t *inpParam4, 
	 ruleExecInfo_t *rei);
int msiRdaCommit(ruleExecInfo_t *rei);
int msiAW1(msParam_t* mPIn, msParam_t* mPOut2, ruleExecInfo_t *rei);
int msiRdaRollback(ruleExecInfo_t *rei);
int msiRenameLocalZone(msParam_t *oldName, msParam_t *newName,
                       ruleExecInfo_t *rei);
int msiRenameCollection(msParam_t *oldName, msParam_t *newName,
                       ruleExecInfo_t *rei);

microsdef_t MicrosTable[] = {
  {"print_hello", 0, (funcPtr) print_hello},
  {"msiVacuum", 0, (funcPtr) msiVacuum},
  {"msiGoodFailure", 0, (funcPtr) msiGoodFailure},
  {"msiSetResource", 1,(funcPtr)  msiSetResource},
  {"msiCheckPermission", 1,(funcPtr)  msiCheckPermission},
  {"msiCheckOwner", 0, (funcPtr) msiCheckOwner},
  {"msiCreateUser", 0, (funcPtr) msiCreateUser},
  {"msiCreateCollByAdmin",2, (funcPtr) msiCreateCollByAdmin},
  {"msiSendMail",3, (funcPtr) msiSendMail},
  {"recover_print_hello", 0, (funcPtr) recover_print_hello},
  {"msiCommit", 0, (funcPtr) msiCommit},
  {"msiRollback", 0, (funcPtr) msiRollback},
  {"msiDeleteCollByAdmin",2, (funcPtr) msiDeleteCollByAdmin},
  {"msiDeleteUser", 0, (funcPtr) msiDeleteUser},
  {"msiAddUserToGroup", 1, (funcPtr) msiAddUserToGroup},
  {"msiSetDefaultResc", 2, (funcPtr) msiSetDefaultResc},
  {"msiSetRescSortScheme", 1, (funcPtr) msiSetRescSortScheme},
  {"msiSysReplDataObj", 2, (funcPtr) msiSysReplDataObj},
  {"msiStageDataObj", 1, (funcPtr) msiStageDataObj},
  {"msiSetDataObjPreferredResc", 1, (funcPtr) msiSetDataObjPreferredResc},
  {"msiSetDataObjAvoidResc", 1, (funcPtr) msiSetDataObjAvoidResc},
  {"msiSortDataObj", 1, (funcPtr) msiSortDataObj},
  {"msiSysChksumDataObj", 0, (funcPtr) msiSysChksumDataObj},
  {"msiSetDataTypeFromExt", 0, (funcPtr) msiSetDataTypeFromExt},
  {"msiSetNoDirectRescInp",1,(funcPtr) msiSetNoDirectRescInp},
  {"msiSetNumThreads", 3,(funcPtr) msiSetNumThreads},
  {"msiDeleteDisallowed",0,(funcPtr) msiDeleteDisallowed},
  {"msiDataObjCreate",3,(funcPtr) msiDataObjCreate},
  {"msiDataObjOpen",2,(funcPtr) msiDataObjOpen},
  {"msiDataObjClose",2,(funcPtr) msiDataObjClose},
  {"msiDataObjLseek",4,(funcPtr) msiDataObjLseek},
  {"msiDataObjRead",3,(funcPtr) msiDataObjRead},
  {"msiDataObjWrite",3,(funcPtr) msiDataObjWrite},
  {"msiDataObjUnlink",2,(funcPtr) msiDataObjUnlink},
  {"msiDataObjRepl",3,(funcPtr) msiDataObjRepl},
  {"msiDataObjCopy",4,(funcPtr) msiDataObjCopy},
  {"msiExtractNaraMetadata",0,(funcPtr) msiExtractNaraMetadata},
  {"msiSetMultiReplPerResc",0,(funcPtr) msiSetMultiReplPerResc},
  {"msiAdmChangeCoreIRB",1,(funcPtr) msiAdmChangeCoreIRB},
  {"msiAdmShowIRB",1,(funcPtr) msiAdmShowIRB},
  {"msiAdmShowDVM",1,(funcPtr) msiAdmShowDVM},
  {"msiAdmShowFNM",1,(funcPtr) msiAdmShowFNM},
  {"msiAdmAppendToTopOfCoreIRB",1,(funcPtr) msiAdmAppendToTopOfCoreIRB},
  {"msiAdmClearAppRuleStruct",0,(funcPtr) msiAdmClearAppRuleStruct},
  {"msiAdmAddAppRuleStruct",3,(funcPtr) msiAdmAddAppRuleStruct},
  {"msiGetObjType",2,(funcPtr) msiGetObjType},
  {"msiAssociateKeyValuePairsToObj",3,(funcPtr) msiAssociateKeyValuePairsToObj},
  {"msiExtractTemplateMDFromBuf",3,(funcPtr) msiExtractTemplateMDFromBuf},
  {"msiReadMDTemplateIntoTagStruct",2,(funcPtr) msiReadMDTemplateIntoTagStruct},
  {"msiDataObjPut",4,(funcPtr) msiDataObjPut},
  {"msiDataObjGet",3,(funcPtr) msiDataObjGet},
  {"msiDataObjChksum",3,(funcPtr) msiDataObjChksum},
  {"msiDataObjPhymv",6,(funcPtr) msiDataObjPhymv},
  {"msiDataObjRename",4,(funcPtr) msiDataObjRename},
  {"msiDataObjTrim",6,(funcPtr) msiDataObjTrim},
  {"msiCollCreate",2,(funcPtr) msiCollCreate},
  {"msiRmColl",3,(funcPtr) msiRmColl},
  {"msiReplColl",4,(funcPtr) msiReplColl},
  {"msiCollRepl",3,(funcPtr) msiCollRepl},
  {"msiPhyPathReg",5,(funcPtr) msiPhyPathReg},
  {"msiObjStat",2,(funcPtr) msiObjStat},
  {"msiDataObjRsync",5,(funcPtr) msiDataObjRsync},
  {"msiFreeBuffer",1,(funcPtr) msiFreeBuffer},
  {"msiNoChkFilePathPerm",0,(funcPtr) msiNoChkFilePathPerm},
  {"msiNoTrashCan",0,(funcPtr) msiNoTrashCan},
  {"msiSetPublicUserOpr",1,(funcPtr) msiSetPublicUserOpr},
  {"whileExec",3,(funcPtr) whileExec},
  {"forExec",5,(funcPtr) forExec},
  {"delayExec",3,(funcPtr) delayExec},
  {"remoteExec",4,(funcPtr) remoteExec},
  {"forEachExec",3,(funcPtr) forEachExec},
  {"msiSleep",2,(funcPtr) msiSleep},
  {"writeString",2,(funcPtr) writeString},
  {"writeLine",2,(funcPtr) writeLine},
  {"writeBytesBuf",2,(funcPtr) writeBytesBuf},
  {"writePosInt",2,(funcPtr) writePosInt},
  {"writeKeyValPairs",3,(funcPtr) writeKeyValPairs},
  {"msiGetDiffTime", 4, (funcPtr) msiGetDiffTime},
  {"msiGetSystemTime", 2, (funcPtr) msiGetSystemTime},
  {"msiHumanToSystemTime", 2, (funcPtr) msiHumanToSystemTime},
  {"msiStrToBytesBuf", 2, (funcPtr) msiStrToBytesBuf},
  {"msiApplyDCMetadataTemplate", 2, (funcPtr) msiApplyDCMetadataTemplate},
  {"sendStdoutAsEmail",2,(funcPtr) sendStdoutAsEmail},
  {"msiPrintKeyValPair",2,(funcPtr) msiPrintKeyValPair},
  {"msiGetValByKey",3,(funcPtr) msiGetValByKey},
  {"assign",2,(funcPtr) assign},
  {"ifExec",5,(funcPtr) ifExec},
  {"break",0,(funcPtr) breakExec},
  {"applyAllRules",3,(funcPtr) msiApplyAllRules},
  {"msiExecStrCondQuery",2,(funcPtr) msiExecStrCondQuery},
  {"msiExecGenQuery",2,(funcPtr) msiExecGenQuery},
  {"msiMakeQuery",3,(funcPtr) msiMakeQuery},
  {"msiMakeGenQuery",3,(funcPtr) msiMakeGenQuery},
  {"msiGetMoreRows",3,(funcPtr) msiGetMoreRows},
  {"msiExecCmd",6,(funcPtr) msiExecCmd},
  {"msiSetGraftPathScheme",2,(funcPtr) msiSetGraftPathScheme},
  {"msiSetRandomScheme",0,(funcPtr) msiSetRandomScheme},
  {"msiCheckHostAccessControl",0,(funcPtr) msiCheckHostAccessControl},
  {"msiGetIcatTime",2,(funcPtr) msiGetIcatTime},
  {"msiGetTaggedValueFromString",3,(funcPtr) msiGetTaggedValueFromString},
  {"msiXmsgServerConnect",1,(funcPtr) msiXmsgServerConnect},
  {"msiXmsgCreateStream",3,(funcPtr) msiXmsgCreateStream},
  {"msiCreateXmsgInp",10,(funcPtr) msiCreateXmsgInp},
  {"msiSendXmsg",2,(funcPtr) msiSendXmsg},
  {"msiRcvXmsg",6,(funcPtr) msiRcvXmsg},
  {"msiXmsgServerDisConnect",1,(funcPtr) msiXmsgServerDisConnect},
  {"msiString2KeyValPair",2,(funcPtr) msiString2KeyValPair},
  {"msiStrArray2String",2,(funcPtr) msiStrArray2String},
  {"msiString2KeyValPair",2,(funcPtr) msiString2KeyValPair},
  {"msiStrArray2String",2,(funcPtr) msiStrArray2String},
  {"msiRdaToStdout",6,(funcPtr) msiRdaToStdout},
  {"msiRdaToDataObj",7,(funcPtr) msiRdaToDataObj},
  {"msiRdaNoResults",6,(funcPtr) msiRdaNoResults},
  {"msiRdaCommit",0,(funcPtr) msiRdaCommit},
  {"msiAW1",2,(funcPtr) msiAW1},
  {"msiRdaRollback",0,(funcPtr) msiRdaRollback},
  {"msiRenameLocalZone",2,(funcPtr) msiRenameLocalZone},
  {"msiRenameCollection",2,(funcPtr) msiRenameCollection},
