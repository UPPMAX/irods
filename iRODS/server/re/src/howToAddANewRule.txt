
Adding a new function and then a rule accessing it:
----------------------

1. Create the function anywhere in the source tree
      A suggestion would be to write a wrapper function
      in server/src/re/reActions*.c and the real function
      at an appropriate place.

   Create the recover-function in the same manner

2. In server/include/reAction.h
      Add the function declaration

      Add the recover-function declaration

3. In server/include/reAction.h
      Add an entry in actiondef_t ActionTable[]
	  for the function call

      Add an entry in actiondef_t ActionTable[]
	  for the recover-function call

4. In server/config/reConfigs
    Add the Rule in appropriate *.irb file

    Add the Variable Mappings (if any)  in appropriate *.dvm file

---------------------------------------------------------------------------
---------------------------------------------------------------------------
here is an example where I added createUser and createCollectionByADmin rules

Step 1. Adding Functions  in  server/src/re/reActions1.c

int reCreateUser(ruleExecInfo_t *rei)
{
  int i;
  /**** This is Just a Test Stub  ****/
  if (reTestFlag > 0 ) {
    if (reTestFlag == COMMAND_TEST_1 || reTestFlag == HTML_TEST_1) {
      print_uoi(rei->uoio);
    }
    else {
      rodsLog (LOG_NOTICE,"   Calling reCreateUser For \n");
      print_uoi(rei->uoio);
    }
    return(0);
  }
  /**** This is Just a Test Stub  ****/
  i =  rhlRegUser(rei->rsComm, rei->uoio, "");
  return(i);
}

int reCreateCollByAdmin(char *parColl, char *childName, ruleExecInfo_t *rei)
{
    int i;
    collInfo_t collInfo;
  /**** This is Just a Test Stub  ****/
  if (reTestFlag > 0 ) {
    if (reTestFlag == COMMAND_TEST_1 || reTestFlag == HTML_TEST_1) {
      fprintf(stdout,"  NewCollection =%s/%s\n",
	       parColl,childName);
    }
    else {
      rodsLog (LOG_NOTICE,"   Calling reCreateCollByAdmin Coll: %s/%s\n",
	       parColl,childName);
    }
    return(0);
  }
  /**** This is Just a Test Stub  ****/
  snprintf(collInfo.collName,MAX_NAME_LEN, "%s/%s",parColl,childName);
  snprintf(collInfo.collOwnerName,MAX_NAME_LEN, "%s",rei->uoio->userName);
  snprintf(collInfo.collOwnerZone,MAX_NAME_LEN, "%s",rei->uoio->rodsZone);
  i =  rhlRegCollByAdmin(rei->rsComm, collInfo );
  return(i);
}

int recover_reCreateUser(ruleExecInfo_t *rei)
{
  /**** This is Just a Test Stub  ****/
  if (reTestFlag > 0 ) {
    if (reTestFlag == LOG_TEST_1) 
      rodsLog (LOG_NOTICE,"   ROLLBACK:Calling recover_reCreateUser\n");
    return(0);
  }
  /**** This is Just a Test Stub  ****/
  return(0);
}


int recover_reCreateCollByAdmin(char *parColl, char *childName, ruleExecInfo_t *rei)
{
  /**** This is Just a Test Stub  ****/
  if (reTestFlag > 0 ) {
    if (reTestFlag == LOG_TEST_1) 
      rodsLog (LOG_NOTICE,"   ROLLBACK:Calling recover_reCreateCollByAdmin\n");
    return(0);
  }
  /**** This is Just a Test Stub  ****/
  return(0);
}


Step 2. Adding Function Declarations in server/include/reAction.h

int reCreateUser(ruleExecInfo_t *rei);
int reCreateCollByAdmin(char *parColl, char *childName, ruleExecInfo_t *rei);
int recover_reCreateUser(ruleExecInfo_t *rei);
int recover_reCreateCollByAdmin(char *parColl, char *childName, ruleExecInfo_t *rei);

Step 3. Adding  Function Description in ActionTable in server/include/reAction.h

  {"createUser", 0, (funcPtr) reCreateUser},
  {"createCollByAdmin",2, (funcPtr) reCreateCollByAdmin},
  {"recover_createUser", 0, (funcPtr) recover_reCreateUser},
  {"recover_createCollByAdmin",2, (funcPtr) recover_reCreateCollByAdmin},


Step 4. Adding Rules and VarMaps in  server/config/reConfigs/core.irb and server/config/reConfigs/core.dvm
  In server/config/reConfigs/core.irb
create_user||createUser##create_default_collections|nop##nop
create_default_collections||create_user_home_collections##create_user_zone_collections|nop##nop
create_user_home_collections||create_coll_by_admin(/home,$otherUserName)##create_coll_by_admin(/trash/home,$otherUserName)|nop##nop
create_user_zone_collections||create_coll_by_admin(/$rodsZoneProxy/home,$otherUserName)##create_coll_by_admin(/trash/$rodsZoneProxy/home,$otherUserName)|nop##nop
create_coll_by_admin||createCollByAdmin($ARG[0],$ARG[1])|nop


  In server/config/reConfigs/core.dvm  (since these were not there before) 

otherUserName||rei->uoio->userName
otherUserZone||rei->uoio->rodsZone
otherUserType||rei->uoio->userType



Check reTest.c to see how this can be tested use:
reTest -n "sekar@sdsc" -z demo -t developer -p "ira@sdsc" -q demo "core" "create_user"
