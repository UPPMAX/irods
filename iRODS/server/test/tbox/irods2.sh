#!/bin/sh

set -x

myhost=`hostname`
mydate=`date`
mypwd=`pwd`

echo "$myhost:$mypwd $mydate irods2.sh starting"

#cd IRODS_BUILD

pgsql/bin/pg_ctl stop
pgsql/bin/pg_ctl status
pgsql/bin/pg_ctl kill

pgsql/bin/pg_ctl stop  -D pgsql/data
pgsql/bin/pg_ctl status -D pgsql/data
pgsql/bin/pg_ctl kill -D pgsql/data

set +x
/bin/rm -rf iRODS
/bin/rm -f /tmp/testRule_* /tmp/testSurvey_*
set -x

# Once a day, download and build postgres too
myhour=`date | cut -b12-13`
if [ $myhour =  11 ] ; then
  rm -rf pg* post* iRODS
  rm -f /tmp/postgresql* /tmp/unixODBC*
fi

echo $PATH

# Get the current source via svn (no longer wget or curl
# of a tar file generated by a cron job).
svn co svn://irodssvn.ucsd.edu/trunk > svn.log
mv trunk/iRODS iRODS

while [ -f /tmp/waitpostsvn ] ; do
    sleep 60
done

date

pgsql=`ls -d pgsql`

#cd /tbox/IRODS_BUILD/iRODS

# Once or twice a day (during a certain hour), use MySQL as the ICAT.
# This assumes MySQL has been installed on the host, as is the case
# for the DICE Tinderbox test host 'pivo'.
cd iRODS
if [ $myhour -eq 08 ] ; then
    echo running setup to use MySQL instead of Postgres
    ./irodssetup < server/test/tbox/input1.txt.no.pg.mysql
else 
    if [ $pgsql = "pgsql" ] ; then
	echo reusing pgsql
	./irodssetup < ../../input1.txt.reuse.pg
    else
	echo building a new pgsql
	./irodssetup < ../../input1.txt.no.pg
    fi
fi

# remember error code
error1=$?
date

#./irodsctl start (don't start, is running from install
#                  and it will mess up the irodsServer.[port]
#                  file and start another REserver).
# remember error code
error2=0

error3=0
if [ $error1 -eq 0 ] ; then
  ./irodsctl testWithoutConfirmation
# remember error code
  error3=$?
  date
fi 

error4=0
doPoundTest=1
if [ $error1 -ne 0 ] ; then
    doPoundTest=0
fi
if [ $error3 -ne 0 ] ; then
    doPoundTest=0
fi
if [ $myhour -ne  18 ] ; then
    doPoundTest=0
fi
if [ $doPoundTest -eq 1 ] ; then
    cd clients/concurrent-test
    ./poundtests.sh 2
    error4=$?
    cd ../..
fi

doBoostTest=0
if [ $myhour -eq 03 ]; then
    doBoostTest=1
fi
if [ $error4 -ne 0 ] ; then
    doBoostTest=0
fi
if [ $doBoostTest -eq 1 ]; then
    server/test/tbox/boostTest.sh
    error4=$?
    date
fi

doJavaTest=1
if [ $error1 -ne 0 ] ; then
    doJavaTest=0
fi
if [ $error3 -ne 0 ] ; then
    doJavaTest=0
fi
if [ $error4 -ne 0 ] ; then
    doJavaTest=0
fi
#if [ $myhour -ne  11 ] ; then
#    doJavaTest=0
#fi

# No longer build and test Jargon
doJavaTest=0

if [ $doJavaTest -eq 1 ] ; then
    # 1st, clean up possible remaining collection from prev test
    clients/icommands/bin/irm -rf myJargonTestDir
    # get password using known line
    pw=`head -6 server/test/tbox/input1.txt.no.pg | tail -1` 
    echo $pw
    rm -f ~/.irods/.irodsA
    echo $pw > ~/.irods/.irodsA
#   svn checkout http://extrods.googlecode.com/svn/trunk/clients/jargon
#    error4=$?
    if [ $error4 -eq 0 ] ; then
	cd jargon
	ant
	error4=$?
	if [ $error4 -eq 0 ] ; then
#	    cd bin
#	    java Test -fullTest irods
#	    java Test irods
	    ant run_irods
	    error4=$?
	    if [ $error4 -eq 0 ] ; then
#		echo 'java Test -fullTest succeeded'
		echo 'java Test succeeded'
	    else 
#		echo 'java Test -fullTest failure'
		echo 'java Test failure'
	    fi
#	    cd ..
	else
	    echo 'ant error'
	fi
	cd ..
    else
	echo 'svn checkout error'
    fi
fi
echo $error4

# Record the test logs into the main log file available via the web
ls -lt server/test/bin/*.log
cat server/test/bin/icatTest.log
cat server/test/bin/icatMiscTest.log
cat server/test/bin/moveTest.log
ls -lt /tmp/testRule_* /tmp/testSurvey_*
cat /tmp/testRule_* /tmp/testSurvey_*

# Record the build log into the main log file available via the web
ls -lt installLogs/installMake.log
cat installLogs/installMake.log

./irodsctl stop
# remember error code
error5=$?

cd ..

pgsql/bin/pg_ctl stop  -D pgsql/data
pgsql/bin/pg_ctl status -D pgsql/data
#pgsql/bin/pg_ctl kill -D pgsql/data

mypwd=`pwd`

mydate=`date`
total=$(( $error1 + $error2 + $error3 + $error4 + $error5))
echo "$mydate $mypwd/irods2.sh exiting total=($total)"

exit $total
