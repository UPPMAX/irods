#
# config/config.mk
#
# This is the iRODS configuration Makefile included in all other
# Makefiles used to build the servers and clients.
#
# The iRODS configuration script copies config/config.mk.in to
# config/config.mk, filling in its best guesses on the OS platform
# and its features.  You can edit this file by hand to modify
# those guesses.
#

#
# Values filled in by the 'configure' script:
# 	OS_platform	The OS for this build.  Platforms supported:
#				alpha_platform
#				sgi_platform
#				solaris_platform
#				sunos_platform
#				aix_platform
#				osx_platform
#				linux_platform
#
#	FILE_64BITS	Whether 64-bit file sizes are supported.
#
#	ADDR_64BITS	Whether 64-bit addressing is supported.
#
#	PARA_OPR	A 1 to enable parallel operations.
#
#	RODS_CAT	A 1 to enable the iCAT in the iRODS server.
#
#	PSQICAT		A 1 if the iCAT uses an Postgres database.
#
#	POSTGRES_HOME	The home directory of Postgres, if PSQICAT = 1
#
#	ORAICAT		A 1 if the iCAT uses an Oracle database.
#
#	MYICAT	    A 1 if the iCAT uses an MySQL database.
#
#	ORACLE_HOME	The home directory of Oracle, if ORAICAT = 1
#
#	NEW_ODBC	A 1 if the Postgres interface uses the unix ODBC.
#
#	MODULES		The list of modules enabled during configuration.
#			Module names are the names of directories in
#			the 'modules' subdirectory.
#
OS_platform=
FILE_64BITS=1
#ADDR_64BITS=
MODULES=
#PARA_OPR=1  
#RODS_CAT=1
#PSQICAT=1
#POSTGRES_HOME=
#NEW_ODBC=1
#ORAICAT=1
#MYICAT=1
#UNIXODBC_HOME=
#UNIXODBC_DATASOURCE=
ifndef ORACLE_HOME
ORACLE_HOME=
endif



#
# Configure the rule engine server
#
# RULE_ENGINE defines whether the Rule Engine is enabled. 
# Enable this normally unless you are debugging some 
# particular module and dont want the rule engine to mess up the flow.
RULE_ENGINE=1





#
# Check which database is in use for the iCAT
#
ifdef RODS_CAT

# Postgres
ifdef PSQICAT
PSQ_DBMS =  1
endif

# Oracle
ifdef ORAICAT
ORA_DBMS =  1
endif

# MySQL
ifdef MYICAT
MY_DBMS =  1
endif

endif


#
# Adjust for the Postgres iCAT
#
ifdef PSQICAT
RODS_CAT = 1
PSQ_DBMS = 1
DBMS_INCLUDE+= -DPSQICAT
endif


#
# Adjust for the Oracle iCAT
#
ifdef ORAICAT
RODS_CAT = 1
ORA_DBMS = 1
endif


#
# Adjust for the MySQL iCAT
#
ifdef MYICAT
RODS_CAT = 1
MY_DBMS = 1
endif


#
# Postgres options
#
ifdef PSQ_DBMS
ifeq ($(OS_platform), osx_platform)
NSL=
else
NSL=-lnsl
endif
PSQ_LIB_DIR = $(POSTGRES_HOME)/lib
PSQ_HDR_DIR = $(POSTGRES_HOME)/include
ifdef NEW_ODBC
DBMS_LIB+= -L$(PSQ_LIB_DIR) -lodbc $(NSL) -lm
else
DBMS_LIB+= -L$(PSQ_LIB_DIR) -lpsqlodbc $(NSL) -lm
endif
DBMS_INCLUDE+= -I$(PSQ_HDR_DIR)
endif


#
# Oracle options
#
ifdef ORA_DBMS
ifdef ADDR_64BITS
ORA_LIB_DIR = $(ORACLE_HOME)/lib
else
ifeq ($(OS_platform), osx_platform)
ORA_LIB_DIR = $(ORACLE_HOME)/lib32
else
ORA_LIB_DIR = $(ORACLE_HOME)/lib
endif
endif

ORA_HDR_DIR = $(ORACLE_HOME)/rdbms/public
DBMS_LIB+= -L$(ORA_LIB_DIR) -lclntsh
DBMS_INCLUDE+= -I$(ORA_HDR_DIR)
endif


#
# MySQL options
#
ifdef MY_DBMS
ifeq ($(OS_platform), osx_platform)
NSL=
else
NSL=-lnsl
endif
ODBC_LIB_DIR = $(UNIXODBC_HOME)/lib
ODBC_HDR_DIR = $(UNIXODBC_HOME)/include
DBMS_LIB+= -L$(ODBC_LIB_DIR) -lodbc $(NSL) -lm
DBMS_INCLUDE+= -I$(ODBC_HDR_DIR)
endif


#
# Misc options
#

# CCMALLOC - specify whether mem leak checking CCMALLOC should be run
# CCMALLOC = 1
ifdef CCMALLOC
CCMALLOC_DIR=/data/mwan/rods/ccmalloc/ccmalloc-0.4.0
endif


# Defines whether GeneralQuery Access Control is enabled
# (Normally not set)
# GEN_QUERY_AC = 1

# IRODS_FS - specify that irodsFuse should be built
# The latest version is 26 for release 2.7. It default to 21 if not defined
# IRODS_FS = 1
ifdef IRODS_FS
fuseHomeDir=/home/mwan/adil/fuse-2.7.0
endif

# PHP_LIB - specify whether php library will be loaded into irodsAgent.
# Would like to use PHP as a micro-service language
# PHP_LIB = 1
ifdef PHP_LIB
PHP_LIB_DIR=/data/mwan/php/php-5.2.5x/libs
endif

# TAR_STRUCT_FILE - specify whether the tar structured file will be loaded 
# into irodsAgent.
# TAR_STRUCT_FILE = 1
ifdef TAR_STRUCT_FILE
tarDir=/data/mwan/tar/libtar-1.2.11
endif

#
# Grid Security Infrastructure
# 
# Uncomment '# GSI_AUTH=1' and specify your GLOBUS_LOCATION and 
# GSI_INSTALL_TYPE (the examples of these below work at SDSC).
#
# GSI_AUTH = 1
ifdef GSI_AUTH
GLOBUS_LOCATION=/usr/local/apps/globus-4.0.1
GSI_INSTALL_TYPE=gcc32dbg
endif

# RBUDP_TRANSFER - specify whether RBUDP file transfer mechanism will be
# supported (iget/iget -U)
RBUDP_TRANSFER = 1

# UNI_CODE - support UTF-8 on linux and UTF-16 on windows
# UNI_CODE = 1

# COMPAT_201 - The data structures of many APIs have been consolidated
# after version 2.0.1. If this flag is set, the server API handle
# will be made to handle the 2.0.1 client request in addition to the
# new data structures. This flag is set by default
COMPAT_201=1

